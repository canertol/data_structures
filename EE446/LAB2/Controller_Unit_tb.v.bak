module Controller_Unit_tb();
	
	  reg CLK,  CLR;
     reg LOAD, COMP;
     reg [2:0] OP;
     reg [1:0] Stat;
	  reg R1m, R0m;
     reg NFlag , Qn, Qz;
     
	  //OUTPUTS
	  wire ERR;
     wire AccRight, AccParallel, AccCLR, QParallel, QSrc, QnCLR, RST, QRight, QzSrc;
	  wire R1Clr, R1Src, R0WE, R1WE;
	  wire [1:0] R0Src, ASrc, BSrc;
	  wire [2:0] ALUCtrl;
	  
	reg[12:0] testvectors[3:0]; // array of testvectors
	reg [1:0] vectornum;

	Controller_Unit #4 DUT(CLK,
            AccRight, AccParallel, AccCLR, // Acc register control
            ALUCtrl, ASrc, BSrc,  // ALU Controllers
            Stat, NFlag,    // Status bits
            LOAD,R1m, R0m,
            COMP, R1Clr, R1Src, R0WE, R1WE, R0Src,
            OP,  //ALP Operation
				QParallel, QSrc, QnCLR, RST, QRight, QzSrc, Qn, Qz,
            CLR, // reset registers
            ERR // Arithmetic overflow
            );
				
				
				
	// generate clock
	always // no sensitivity list, so it always executes
	begin
		CLK <= 1; 
		#5;
		CLK <= 0;
		#5;
	end	
	// load vectors
	initial
	begin
	$readmemb("C:/Users/Caner/Documents/GitHub/Course-Projects/EE446/LAB2/Controller_Unit_tb.tv",testvectors);
	vectornum = 0;
	end
	
	//apply test vectors
	always
	begin
	 #13;
	 {LOAD, COMP, OP, CLR,NFlag ,Stat, Qn, Qz, R1m, R0m } = testvectors[vectornum];
	 vectornum = vectornum +1;
	end

endmodule
