// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/26/2019 16:12:03"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          de0nano_embedding
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module de0nano_embedding_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [33:0] treg_GPIO_0;
reg [1:0] KEY;
reg reset;
// wires                                               
wire [1:0] ALUControl;
wire ALUSrc;
wire [33:0] GPIO_0;
wire [1:0] ImmSrc;
wire [31:0] Inst;
wire [7:0] LED;
wire MemWrite;
wire MemtoReg;
wire PCSrc;
wire RegSrc;
wire RegWrite;
wire Shift;
wire Zero;

// assign statements (if any)                          
assign GPIO_0 = treg_GPIO_0;
de0nano_embedding i1 (
// port map - connection between master ports and signals/registers   
	.ALUControl(ALUControl),
	.ALUSrc(ALUSrc),
	.GPIO_0(GPIO_0),
	.ImmSrc(ImmSrc),
	.Inst(Inst),
	.KEY(KEY),
	.LED(LED),
	.MemWrite(MemWrite),
	.MemtoReg(MemtoReg),
	.PCSrc(PCSrc),
	.RegSrc(RegSrc),
	.RegWrite(RegWrite),
	.Shift(Shift),
	.Zero(Zero),
	.reset(reset)
);
initial 
begin 
#100000000 $finish;
end 

// GPIO_0[0]
initial
begin
	treg_GPIO_0[0] = 1'bZ;
end 
// KEY[ 1 ]
always
begin
	KEY[1] = 1'b0;
	KEY[1] = #500000 1'b1;
	#500000;
end 
// KEY[ 0 ]
initial
begin
	KEY[0] = 1'b1;
end 

// reset
initial
begin
	reset = 1'b1;
	reset = #6720000 1'b0;
end 
endmodule

