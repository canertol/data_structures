// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/24/2019 17:26:37"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          datapath
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module datapath_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [1:0] ALUControl;
reg ALUSrc;
reg CLK;
reg [1:0] ImmSrc;
reg MemtoReg;
reg MemWrite;
reg PCSrc;
reg RegSrc;
reg RegWrite;
reg Shift;
// wires                                               
wire [31:0] dataA;
wire [31:0] dataRead;
wire [31:0] Inst;
wire [31:0] RFreadtwo;
wire Zero;

// assign statements (if any)                          
datapath i1 (
// port map - connection between master ports and signals/registers   
	.ALUControl(ALUControl),
	.ALUSrc(ALUSrc),
	.CLK(CLK),
	.dataA(dataA),
	.dataRead(dataRead),
	.ImmSrc(ImmSrc),
	.Inst(Inst),
	.MemtoReg(MemtoReg),
	.MemWrite(MemWrite),
	.PCSrc(PCSrc),
	.RegSrc(RegSrc),
	.RegWrite(RegWrite),
	.RFreadtwo(RFreadtwo),
	.Shift(Shift),
	.Zero(Zero)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #50000 1'b1;
	#50000;
end 
// ALUControl[ 1 ]
initial
begin
	ALUControl[1] = 1'b0;
end 
// ALUControl[ 0 ]
initial
begin
	ALUControl[0] = 1'b0;
end 

// ALUSrc
initial
begin
	ALUSrc = 1'b0;
end 

// MemtoReg
initial
begin
	MemtoReg = 1'b0;
end 

// MemWrite
initial
begin
	MemWrite = 1'b0;
end 

// PCSrc
initial
begin
	PCSrc = 1'b0;
end 

// RegSrc
initial
begin
	RegSrc = 1'b0;
end 

// RegWrite
initial
begin
	RegWrite = 1'b0;
end 

// Shift
initial
begin
	Shift = 1'b0;
end 
// ImmSrc[ 1 ]
initial
begin
	ImmSrc[1] = 1'b0;
end 
// ImmSrc[ 0 ]
initial
begin
	ImmSrc[0] = 1'b0;
end 
endmodule

