
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module de0nano_embedding(

	//////////// CLOCK //////////
	CLOCK_50,

	//////////// LED //////////
	LED,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SDRAM //////////
	DRAM_ADDR,
	DRAM_BA,
	DRAM_CAS_N,
	DRAM_CKE,
	DRAM_CLK,
	DRAM_CS_N,
	DRAM_DQ,
	DRAM_DQM,
	DRAM_RAS_N,
	DRAM_WE_N,

	//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
	GPIO_0,
	GPIO_0_IN,

	//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
	GPIO_1,
	GPIO_1_IN 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;

//////////// LED //////////
output		     [7:0]		LED;

//////////// KEY //////////
input 		     [1:0]		KEY;

//////////// SW //////////
input 		     [3:0]		SW;

//////////// SDRAM //////////
output		    [12:0]		DRAM_ADDR;
output		     [1:0]		DRAM_BA;
output		          		DRAM_CAS_N;
output		          		DRAM_CKE;
output		          		DRAM_CLK;
output		          		DRAM_CS_N;
inout 		    [15:0]		DRAM_DQ;
output		     [1:0]		DRAM_DQM;
output		          		DRAM_RAS_N;
output		          		DRAM_WE_N;

//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
inout 		    [33:0]		GPIO_0;
input 		     [1:0]		GPIO_0_IN;

//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
inout 		    [33:0]		GPIO_1;
input 		     [1:0]		GPIO_1_IN;


//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================
//registerfile rf(.datain(SW[3:0]),.dataA(LED[7:4]),.dataB(LED[3:0]),.enable(GPIO_0[24]),.reset(KEY[0]),.clk(GPIO_0[33]),.addrin(GPIO_0[32:31]),.addrout1(GPIO_0[29:28]),.addrout2(GPIO_0[26:25]));
datapath dp(.outr1(LED[7:0]),.aluoutselect(GPIO_0[24]),.reset(KEY[0]),.clock(GPIO_0[33]),.loadorincrload(GPIO_0[32]),.ps1sonra0(GPIO_0[31]),.sonmuilk2islemmi(GPIO_0[29]));						
//regfile rgf(.datain(SW[3:0]),.dataA(LED[7:4]),.dataB(LED[3:0]),.write(GPIO_0[24]),.reset(KEY[0]),.clk(GPIO_0[33]),.wraddr(GPIO_0[32:31]),.addrout1(GPIO_0[29:28]),.addrout2(GPIO_0[26:25]));
//.input1(GPIO_0[7:0]),

endmodule
