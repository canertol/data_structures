module and_bit (a,b,C);
input a;
input [15:0]b;
output [15:0]C;

assign C[15]= (a && b[15]);
assign C[14]= (a && b[14]);
assign C[13]= (a && b[13]);
assign C[12]= (a && b[12]);
assign C[11]= (a && b[11]);
assign C[10]= (a && b[10]);
assign C[9]= (a && b[9]);
assign C[8]= (a && b[8]);
assign C[7]= (a && b[7]);
assign C[6]= (a && b[6]);
assign C[5]= (a && b[5]);
assign C[4]= (a && b[4]);
assign C[3]= (a && b[3]);
assign C[2]= (a && b[2]);
assign C[1]= (a && b[1]);
assign C[0]= (a && b[0]);

endmodule