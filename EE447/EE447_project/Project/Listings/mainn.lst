


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; mainn.s  
    3 00000000         ; BATTLESHIP GAME 2019
    4 00000000         ; Authors: Cagnur Tekerekoglu - cagnurtekerekoglu@gmail.
                       com
    5 00000000         ;     Caner  Tol        - m.canertol@gmail.com
    6 00000000         ; Middle East Technical University, Ankara, TURKEY
    7 00000000         ;*******************************************************
                       ******** 
    8 00000000         ;*******************************************************
                       ******** 
    9 00000000         ; EQU Directives
   10 00000000         ; These directives do not allocate memory
   11 00000000         ;*******************************************************
                       ********
   12 00000000         ;LABEL   DIRECTIVE VALUE  COMMENT
   13 00000000         ; ADC0 base address  EQU 0x40038000
   14 00000000 40004100 
                       DC      EQU              0x40004100
   15 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   16 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   17 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
   18 00000000         ;ADC0_SSFIFO3   EQU  0x400380A8   ; Channel 3 results
   19 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
   20 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; Interrupt Status 
                                                            and Clear
   21 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 2 results
                                                            
   22 00000000 40039004 
                       ADC1_RIS
                               EQU              0x40039004  ; Interrupt status
   23 00000000 40039028 
                       ADC1_PSSI
                               EQU              0x40039028  ; Initiate sample
   24 00000000 400390A8 
                       ADC1_SSFIFO3
                               EQU              0x400390A8  ; Channel 3 results
                                                            
   25 00000000 4003900C 
                       ADC1_ISC
                               EQU              0x4003900C  ; Interrupt Status 
                                                            and Clear 
   26 00000000 20000004 
                       state_memory
                               EQU              0x20000004
   27 00000000 2000000C 



ARM Macro Assembler    Page 2 


                       xy_memory
                               EQU              0x2000000C  ; Y 
   28 00000000         ;*******************************************************
                       ********
   29 00000000         ; Program section           
   30 00000000         ;*******************************************************
                       ********
   31 00000000         ;LABEL   DIRECTIVE VALUE  COMMENT
   32 00000000                 AREA             main, READONLY, CODE
   33 00000000                 THUMB
   34 00000000                 IMPORT           INIT
   35 00000000                 IMPORT           DELAY100
   36 00000000                 IMPORT           cursor
   37 00000000                 IMPORT           cursor2
   38 00000000                 IMPORT           ship_load
   39 00000000                 IMPORT           draw_borders
   40 00000000                 IMPORT           clear_SRAM
   41 00000000                 IMPORT           clear_SRAM_mine
   42 00000000                 IMPORT           clear_cursor
   43 00000000                 IMPORT           timer
   44 00000000                 IMPORT           mine_load
   45 00000000                 EXPORT           __main      ; Make available
   46 00000000         
   47 00000000         
   48 00000000         __main
   49 00000000 F7FF FFFE 
                       start   BL               INIT
   50 00000004         
   51 00000004 48A6    BUSY10  LDR              R0,=SSI0_SR_R
   52 00000006 6801            LDR              R1, [R0]
   53 00000008 F001 0110       AND              R1, #0x10
   54 0000000C 2910            CMP              R1, #0x10
   55 0000000E D0F9            BEQ              BUSY10
   56 00000010 48A4            LDR              R0, =DC     ;dc_command  
   57 00000012 F04F 0100       MOV              R1, #0
   58 00000016 6001            STR              R1, [R0]
   59 00000018         ; sent 0x20
   60 00000018 48A3            LDR              R0,=SSI0_DR_R
   61 0000001A F04F 0120       MOV              R1, #0x20   ; H=0
   62 0000001E 6001            STR              R1, [R0]
   63 00000020 B500            PUSH             {LR}
   64 00000022 F7FF FFFE       BL               clear_SRAM
   65 00000026 F85D EB04       POP              {LR}
   66 0000002A B500            PUSH             {LR}
   67 0000002C F7FF FFFE       BL               clear_SRAM_mine
   68 00000030 F85D EB04       POP              {LR}
   69 00000034 F04F 0101       MOV              R1, #1
   70 00000038 489C            LDR              R0, =state_memory
   71 0000003A 6001            STR              R1, [R0]    ; 4 BYTE YER TEMIZL
                                                            ENDI
   72 0000003C B500            PUSH             {LR}
   73 0000003E F7FF FFFE       BL               draw_borders
   74 00000042 F85D EB04       POP              {LR}
   75 00000046         
   76 00000046         
   77 00000046         SmplXY
   78 00000046         
   79 00000046 F248 000C 
              F2C4 0000 



ARM Macro Assembler    Page 3 


                       init_XY MOV32            R0, SSI0_SR_R
   80 0000004E 6801            LDR              R1, [R0]
   81 00000050 F011 0110       ANDS             R1, R1, #0x10
   82 00000054 D1F7            BNE              init_XY
   83 00000056 F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
   84 0000005E F04F 0100       MOV              R1, #0
   85 00000062 6001            STR              R1, [R0]
   86 00000064         ; sent
   87 00000064 F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
   88 0000006C F04F 0186       MOV              R1, #0x86   ; CURSOR RESET X=6
   89 00000070 6001            STR              R1, [R0]
   90 00000072 F04F 0141       MOV              R1, #0x41   ;  CURSOR RESET Y=1
                                                            
   91 00000076 6001            STR              R1, [R0]
   92 00000078 B500            PUSH             {LR}
   93 0000007A F7FF FFFE       BL               DELAY100
   94 0000007E F85D EB04       POP              {LR}
   95 00000082 F240 0004 
              F2C2 0000        MOV32            R0, state_memory
   96 0000008A 7800            LDRB             R0, [R0]
   97 0000008C 2801            CMP              R0, #1
   98 0000008E D105            BNE              jump0
   99 00000090 B500            PUSH             {LR}
  100 00000092 F7FF FFFE       BL               ship_load
  101 00000096 F85D EB04       POP              {LR}
  102 0000009A E004            B                sadas
  103 0000009C         ; x 
  104 0000009C         ; start sampling routine
  105 0000009C         ; initiate sampling by enabling SS3 in ADC0_PSSI
  106 0000009C B500    jump0   PUSH             {LR}
  107 0000009E F7FF FFFE       BL               mine_load
  108 000000A2 F85D EB04       POP              {LR}
  109 000000A6         
  110 000000A6 4982    sadas   LDR              R1, =ADC0_PSSI ; sample sequenc
                                                            e initiate address
  111 000000A8 6808            LDR              R0, [R1]
  112 000000AA F040 0008       ORR              R0, R0, #0x08 
                                                            ; set bit 3 for SS3
                                                            
  113 000000AE 6008            STR              R0, [R1]
  114 000000B0         ; check for sample complete (bit 2 of ADC0_RIS set)
  115 000000B0 4980            LDR              R1, =ADC0_RIS 
                                                            ; interrupt address
                                                            
  116 000000B2 6808    ContX   LDR              R0, [R1]
  117 000000B4 F010 0008       ANDS             R0, R0, #0x8
  118 000000B8 D0FB            BEQ              ContX
  119 000000BA         ;branch fails if the flag is set so data can be read and
                        flag is cleared
  120 000000BA 497F            LDR              R1, =ADC0_ISC
  121 000000BC F04F 0004       MOV              R0, #0x4
  122 000000C0 6008            STR              R0, [R1]    ; clear flag
  123 000000C2         ; save cursor position in R7 with 6 bits
  124 000000C2 497E            LDR              R1, =ADC0_SSFIFO3 
                                                            ; result address
  125 000000C4 F8D1 B000       LDR              R11,[R1]    ; read cursor X (sa
                                                            mple from AIN0)



ARM Macro Assembler    Page 4 


  126 000000C8 EA4F 1B9B       LSR              R11, #6     ; 6 bits X address
  127 000000CC F1BB 0F3A       CMP              R11, #58
  128 000000D0 D301            BLO              setX
  129 000000D2 F04F 0B3A       MOV              R11, #58
  130 000000D6         
  131 000000D6         
  132 000000D6         
  133 000000D6 F248 000C 
              F2C4 0000 
                       setX    MOV32            R0, SSI0_SR_R
  134 000000DE 6801            LDR              R1, [R0]
  135 000000E0 F011 0110       ANDS             R1, R1, #0x10
  136 000000E4 D1F7            BNE              setX
  137 000000E6 F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
  138 000000EE F04F 0100       MOV              R1, #0
  139 000000F2 6001            STR              R1, [R0]
  140 000000F4         ;   ;left
  141 000000F4         ;   MOV32 R0, SSI0_DR_R
  142 000000F4         ;   MOV R1, #0x86 
  143 000000F4         ;   ADD R1, R11
  144 000000F4         ;   SUB R1, #1
  145 000000F4         ;   STR R1, [R0]
  146 000000F4         ;   BL clear_cursor
  147 000000F4         ;   ;right
  148 000000F4         ;   MOV32 R0, SSI0_DR_R
  149 000000F4         ;   MOV R1, #0x86 
  150 000000F4         ;   ADD R1, R11
  151 000000F4         ;   ADD R1, #1
  152 000000F4         ;   STR R1, [R0]
  153 000000F4         ;   BL clear_cursor
  154 000000F4         ; main one 
  155 000000F4 F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
  156 000000FC F04F 0186       MOV              R1, #0x86
  157 00000100 4459            ADD              R1, R11
  158 00000102 6001            STR              R1, [R0]
  159 00000104         
  160 00000104         
  161 00000104         ; Y 
  162 00000104         ; start sampling routine
  163 00000104         ; initiate sampling by enabling SS3 in ADC0_PSSI
  164 00000104 496E            LDR              R1, =ADC1_PSSI ; sample sequenc
                                                            e initiate address
  165 00000106 6808            LDR              R0, [R1]
  166 00000108 F040 0008       ORR              R0, R0, #0x08 
                                                            ; set bit 3 for SS3
                                                            
  167 0000010C 6008            STR              R0, [R1]
  168 0000010E         ; check for sample complete (bit 2 of ADC0_RIS set)
  169 0000010E 496D            LDR              R1, =ADC1_RIS 
                                                            ; interrupt address
                                                            
  170 00000110 6808    ContY   LDR              R0, [R1]
  171 00000112 F010 0008       ANDS             R0, R0, #0x8
  172 00000116 D0FB            BEQ              ContY
  173 00000118         ;branch fails if the flag is set so data can be read and
                        flag is cleared
  174 00000118 496B            LDR              R1, =ADC1_ISC



ARM Macro Assembler    Page 5 


  175 0000011A F04F 0004       MOV              R0, #0x4
  176 0000011E 6008            STR              R0, [R1]    ; clear flag
  177 00000120         ; save cursor position in R12 with 3 bits
  178 00000120 496A            LDR              R1, =ADC1_SSFIFO3 
                                                            ; result address
  179 00000122 F8D1 C000       LDR              R12,[R1]    ; read cursor Y (sa
                                                            mple from AIN1)
  180 00000126         
  181 00000126 F5BC 6F80       CMP              R12, #0x400
  182 0000012A BF38 2341       MOVLO            R3, #0x41   ; set Y=1
  183 0000012E D30A            BLO              setY
  184 00000130 F5BC 6F40       CMP              R12, #0xC00
  185 00000134 BF88 2344       MOVHI            R3, #0x44   ; set Y=4
  186 00000138 D805            BHI              setY
  187 0000013A F5BC 6F00       CMP              R12, #0x800
  188 0000013E BF88 2343       MOVHI            R3, #0x43   ; set Y=3
  189 00000142 BF38 2342       MOVLO            R3, #0x42   ; set Y=2
  190 00000146         
  191 00000146         
  192 00000146 F248 000C 
              F2C4 0000 
                       setY    MOV32            R0, SSI0_SR_R
  193 0000014E 6801            LDR              R1, [R0]
  194 00000150 F011 0110       ANDS             R1, R1, #0x10
  195 00000154 D1F7            BNE              setY
  196 00000156 F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
  197 0000015E F04F 0100       MOV              R1, #0
  198 00000162 6001            STR              R1, [R0]
  199 00000164         ; sent
  200 00000164 F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
  201 0000016C         ;  Y CURSOR RESET 
  202 0000016C 6003            STR              R3, [R0]
  203 0000016E F240 000C 
              F2C2 0000        MOV32            R0, xy_memory
  204 00000176 7003            STRB             R3, [R0]
  205 00000178         ;   MOV32 R0, cursor_memory
  206 00000178         ;   STRB R3, [R0], #1
  207 00000178 F240 0004 
              F2C2 0000        MOV32            R0, state_memory
  208 00000180 7800            LDRB             R0, [R0]
  209 00000182 2801            CMP              R0, #1
  210 00000184 D105            BNE              jump
  211 00000186 B500            PUSH             {LR}
  212 00000188 F7FF FFFE       BL               cursor
  213 0000018C F85D EB04       POP              {LR}
  214 00000190 E7FF            B                jump
  215 00000192         
  216 00000192 2810    jump    CMP              R0, #16
  217 00000194 D104            BNE              jumpp
  218 00000196 B500            PUSH             {LR}
  219 00000198 F7FF FFFE       BL               cursor
  220 0000019C F85D EB04       POP              {LR}
  221 000001A0         
  222 000001A0 EA4F 12DC 
                       jumpp   LSR              R2,R12, #7
  223 000001A4 F04F 0108       MOV              R1, #8
  224 000001A8 FBB2 F0F1       UDIV             R0, R2, R1



ARM Macro Assembler    Page 6 


  225 000001AC FB01 F100       MUL              R1, R0
  226 000001B0 EBA2 0001       SUB              R0, R2, R1
  227 000001B4 2802            CMP              R0, #2
  228 000001B6 F43F AF46       BEQ.W            SmplXY
  229 000001BA 2803            CMP              R0, #3
  230 000001BC F43F AF43       BEQ.W            SmplXY
  231 000001C0 2804            CMP              R0, #4
  232 000001C2 F43F AF40       BEQ.W            SmplXY
  233 000001C6 2805            CMP              R0, #5
  234 000001C8 F000 800E       BEQ.W            cursor_shift
  235 000001CC 2806            CMP              R0, #6
  236 000001CE F000 800B       BEQ.W            cursor_shift
  237 000001D2 2807            CMP              R0, #7
  238 000001D4 F000 8008       BEQ.W            cursor_shift
  239 000001D8 2800            CMP              R0, #0
  240 000001DA F000 8005       BEQ.W            cursor_shift
  241 000001DE 2801            CMP              R0, #1
  242 000001E0 F43F AF31       BEQ.W            SmplXY
  243 000001E4 F7FF BF2F       B.W              SmplXY
  244 000001E8         
  245 000001E8         cursor_shift
  246 000001E8 F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
  247 000001F0 F04F 0100       MOV              R1, #0
  248 000001F4 6001            STR              R1, [R0]
  249 000001F6         
  250 000001F6 F248 000C 
              F2C4 0000 
                       shift_x MOV32            R0, SSI0_SR_R
  251 000001FE 6801            LDR              R1, [R0]
  252 00000200 F011 0110       ANDS             R1, R1, #0x10
  253 00000204 D1F7            BNE              shift_x
  254 00000206 F011 0110       ANDS             R1, R1, #0x10
  255 0000020A D1F4            BNE              shift_x
  256 0000020C F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
  257 00000214 F04F 0100       MOV              R1, #0
  258 00000218 6001            STR              R1, [R0]
  259 0000021A         ; sent
  260 0000021A F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
  261 00000222 F04F 0186       MOV              R1, #0x86
  262 00000226 4459            ADD              R1, R11     ; CURSOR RESET X=6
  263 00000228 6001            STR              R1, [R0]
  264 0000022A         
  265 0000022A F248 000C 
              F2C4 0000 
                       shift_y MOV32            R0, SSI0_SR_R
  266 00000232 6801            LDR              R1, [R0]
  267 00000234 F011 0110       ANDS             R1, R1, #0x10
  268 00000238 D1F7            BNE              shift_y
  269 0000023A F011 0110       ANDS             R1, R1, #0x10
  270 0000023E D1F4            BNE              shift_y
  271 00000240 F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
  272 00000248 F103 0301       ADD              R3, #1      ;  CURSOR RESET Y=4
                                                            
  273 0000024C 6003            STR              R3, [R0]
  274 0000024E         



ARM Macro Assembler    Page 7 


  275 0000024E         
  276 0000024E 2B45            CMP              R3, #0x45
  277 00000250 F43F AEF9       BEQ              SmplXY
  278 00000254 2B46            CMP              R3, #0x46
  279 00000256 F43F AEF6       BEQ              SmplXY
  280 0000025A 2B40            CMP              R3, #0x40
  281 0000025C F43F AEF3       BEQ              SmplXY
  282 00000260 BF00            NOP
  283 00000262 BF00            NOP
  284 00000264 480F            LDR              R0, =DC     ;dc_command  
  285 00000266 F04F 0140       MOV              R1, #0x40
  286 0000026A 6001            STR              R1, [R0]
  287 0000026C BF00            NOP
  288 0000026E F240 0004 
              F2C2 0000        MOV32            R0, state_memory
  289 00000276 7800            LDRB             R0, [R0]
  290 00000278 2801            CMP              R0, #1
  291 0000027A D105            BNE              jumpX
  292 0000027C B500            PUSH             {LR}
  293 0000027E F7FF FFFE       BL               cursor2
  294 00000282 F85D EB04       POP              {LR}
  295 00000286 E7FF            B                jumpX
  296 00000288         
  297 00000288 2810    jumpX   CMP              R0, #16
  298 0000028A D104            BNE              jumppX
  299 0000028C B500            PUSH             {LR}
  300 0000028E F7FF FFFE       BL               cursor2
  301 00000292 F85D EB04       POP              {LR}
  302 00000296         
  303 00000296         jumppX                               ; print lower part 
                                                            of the cursor
  304 00000296 BF00            NOP
  305 00000298 BF00            NOP
  306 0000029A E6D4            B                SmplXY
  307 0000029C         
  308 0000029C         
  309 0000029C         
  310 0000029C         
  311 0000029C         
  312 0000029C         
  313 0000029C         
  314 0000029C         
  315 0000029C         
  316 0000029C         
  317 0000029C         
  318 0000029C         
  319 0000029C         
  320 0000029C         
  321 0000029C         
  322 0000029C         
  323 0000029C         
  324 0000029C         
  325 0000029C         
  326 0000029C         
  327 0000029C         
  328 0000029C         
  329 0000029C         
  330 0000029C         
  331 0000029C         



ARM Macro Assembler    Page 8 


  332 0000029C         
  333 0000029C         
  334 0000029C         
  335 0000029C         
  336 0000029C         
  337 0000029C         
  338 0000029C         
  339 0000029C         
  340 0000029C         
  341 0000029C         
  342 0000029C         
  343 0000029C         
  344 0000029C         
  345 0000029C         
  346 0000029C         
  347 0000029C         
  348 0000029C E7FE    done    B                done
  349 0000029E         
  350 0000029E 00 00           ALIGN
  351 000002A0                 END
              4000800C 
              40004100 
              40008008 
              20000004 
              40038028 
              40038004 
              4003800C 
              400380A8 
              40039028 
              40039004 
              4003900C 
              400390A8 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\mainn.d -o.\objects\mainn.o -I.\RTE\_Target_1 -IC:\Ke
il_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CMSI
S\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" 
--predefine="TM4C123GH6PM SETA 1" --list=.\listings\mainn.lst mainn.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BUSY10 00000004

Symbol: BUSY10
   Definitions
      At line 51 in file mainn.s
   Uses
      At line 55 in file mainn.s
Comment: BUSY10 used once
ContX 000000B2

Symbol: ContX
   Definitions
      At line 116 in file mainn.s
   Uses
      At line 118 in file mainn.s
Comment: ContX used once
ContY 00000110

Symbol: ContY
   Definitions
      At line 170 in file mainn.s
   Uses
      At line 172 in file mainn.s
Comment: ContY used once
SmplXY 00000046

Symbol: SmplXY
   Definitions
      At line 77 in file mainn.s
   Uses
      At line 228 in file mainn.s
      At line 230 in file mainn.s
      At line 232 in file mainn.s
      At line 242 in file mainn.s
      At line 243 in file mainn.s
      At line 277 in file mainn.s
      At line 279 in file mainn.s
      At line 281 in file mainn.s
      At line 306 in file mainn.s

__main 00000000

Symbol: __main
   Definitions
      At line 48 in file mainn.s
   Uses
      At line 45 in file mainn.s
Comment: __main used once
cursor_shift 000001E8

Symbol: cursor_shift
   Definitions
      At line 245 in file mainn.s
   Uses
      At line 234 in file mainn.s
      At line 236 in file mainn.s
      At line 238 in file mainn.s
      At line 240 in file mainn.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

done 0000029C

Symbol: done
   Definitions
      At line 348 in file mainn.s
   Uses
      At line 348 in file mainn.s
Comment: done used once
init_XY 00000046

Symbol: init_XY
   Definitions
      At line 79 in file mainn.s
   Uses
      At line 82 in file mainn.s
Comment: init_XY used once
jump 00000192

Symbol: jump
   Definitions
      At line 216 in file mainn.s
   Uses
      At line 210 in file mainn.s
      At line 214 in file mainn.s

jump0 0000009C

Symbol: jump0
   Definitions
      At line 106 in file mainn.s
   Uses
      At line 98 in file mainn.s
Comment: jump0 used once
jumpX 00000288

Symbol: jumpX
   Definitions
      At line 297 in file mainn.s
   Uses
      At line 291 in file mainn.s
      At line 295 in file mainn.s

jumpp 000001A0

Symbol: jumpp
   Definitions
      At line 222 in file mainn.s
   Uses
      At line 217 in file mainn.s
Comment: jumpp used once
jumppX 00000296

Symbol: jumppX
   Definitions
      At line 303 in file mainn.s
   Uses
      At line 298 in file mainn.s
Comment: jumppX used once
main 00000000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: main
   Definitions
      At line 32 in file mainn.s
   Uses
      None
Comment: main unused
sadas 000000A6

Symbol: sadas
   Definitions
      At line 110 in file mainn.s
   Uses
      At line 102 in file mainn.s
Comment: sadas used once
setX 000000D6

Symbol: setX
   Definitions
      At line 133 in file mainn.s
   Uses
      At line 128 in file mainn.s
      At line 136 in file mainn.s

setY 00000146

Symbol: setY
   Definitions
      At line 192 in file mainn.s
   Uses
      At line 183 in file mainn.s
      At line 186 in file mainn.s
      At line 195 in file mainn.s

shift_x 000001F6

Symbol: shift_x
   Definitions
      At line 250 in file mainn.s
   Uses
      At line 253 in file mainn.s
      At line 255 in file mainn.s

shift_y 0000022A

Symbol: shift_y
   Definitions
      At line 265 in file mainn.s
   Uses
      At line 268 in file mainn.s
      At line 270 in file mainn.s

start 00000000

Symbol: start
   Definitions
      At line 49 in file mainn.s
   Uses
      None



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Comment: start unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 20 in file mainn.s
   Uses
      At line 120 in file mainn.s
Comment: ADC0_ISC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 19 in file mainn.s
   Uses
      At line 110 in file mainn.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 17 in file mainn.s
   Uses
      At line 115 in file mainn.s
Comment: ADC0_RIS used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 21 in file mainn.s
   Uses
      At line 124 in file mainn.s
Comment: ADC0_SSFIFO3 used once
ADC1_ISC 4003900C

Symbol: ADC1_ISC
   Definitions
      At line 25 in file mainn.s
   Uses
      At line 174 in file mainn.s
Comment: ADC1_ISC used once
ADC1_PSSI 40039028

Symbol: ADC1_PSSI
   Definitions
      At line 23 in file mainn.s
   Uses
      At line 164 in file mainn.s
Comment: ADC1_PSSI used once
ADC1_RIS 40039004

Symbol: ADC1_RIS
   Definitions
      At line 22 in file mainn.s
   Uses
      At line 169 in file mainn.s
Comment: ADC1_RIS used once
ADC1_SSFIFO3 400390A8

Symbol: ADC1_SSFIFO3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 24 in file mainn.s
   Uses
      At line 178 in file mainn.s
Comment: ADC1_SSFIFO3 used once
DC 40004100

Symbol: DC
   Definitions
      At line 14 in file mainn.s
   Uses
      At line 56 in file mainn.s
      At line 83 in file mainn.s
      At line 137 in file mainn.s
      At line 196 in file mainn.s
      At line 246 in file mainn.s
      At line 256 in file mainn.s
      At line 284 in file mainn.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 16 in file mainn.s
   Uses
      At line 60 in file mainn.s
      At line 87 in file mainn.s
      At line 155 in file mainn.s
      At line 200 in file mainn.s
      At line 260 in file mainn.s
      At line 271 in file mainn.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 15 in file mainn.s
   Uses
      At line 51 in file mainn.s
      At line 79 in file mainn.s
      At line 133 in file mainn.s
      At line 192 in file mainn.s
      At line 250 in file mainn.s
      At line 265 in file mainn.s

state_memory 20000004

Symbol: state_memory
   Definitions
      At line 26 in file mainn.s
   Uses
      At line 70 in file mainn.s
      At line 95 in file mainn.s
      At line 207 in file mainn.s
      At line 288 in file mainn.s

xy_memory 2000000C

Symbol: xy_memory



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 27 in file mainn.s
   Uses
      At line 203 in file mainn.s
Comment: xy_memory used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DELAY100 00000000

Symbol: DELAY100
   Definitions
      At line 35 in file mainn.s
   Uses
      At line 93 in file mainn.s
Comment: DELAY100 used once
INIT 00000000

Symbol: INIT
   Definitions
      At line 34 in file mainn.s
   Uses
      At line 49 in file mainn.s
Comment: INIT used once
clear_SRAM 00000000

Symbol: clear_SRAM
   Definitions
      At line 40 in file mainn.s
   Uses
      At line 64 in file mainn.s
Comment: clear_SRAM used once
clear_SRAM_mine 00000000

Symbol: clear_SRAM_mine
   Definitions
      At line 41 in file mainn.s
   Uses
      At line 67 in file mainn.s
Comment: clear_SRAM_mine used once
clear_cursor 00000000

Symbol: clear_cursor
   Definitions
      At line 42 in file mainn.s
   Uses
      None
Comment: clear_cursor unused
cursor 00000000

Symbol: cursor
   Definitions
      At line 36 in file mainn.s
   Uses
      At line 212 in file mainn.s
      At line 219 in file mainn.s

cursor2 00000000

Symbol: cursor2
   Definitions
      At line 37 in file mainn.s
   Uses
      At line 293 in file mainn.s
      At line 300 in file mainn.s

draw_borders 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: draw_borders
   Definitions
      At line 39 in file mainn.s
   Uses
      At line 73 in file mainn.s
Comment: draw_borders used once
mine_load 00000000

Symbol: mine_load
   Definitions
      At line 44 in file mainn.s
   Uses
      At line 107 in file mainn.s
Comment: mine_load used once
ship_load 00000000

Symbol: ship_load
   Definitions
      At line 38 in file mainn.s
   Uses
      At line 100 in file mainn.s
Comment: ship_load used once
timer 00000000

Symbol: timer
   Definitions
      At line 43 in file mainn.s
   Uses
      None
Comment: timer unused
11 symbols
380 symbols in table
