


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********
    2 00000000         ;LABEL         DIRECTIVE VALUE  COMMENT
    3 00000000         ; ADC0 base address EQU 0x40038000
    4 00000000 00000054 
                       SCREENW EQU              84
    5 00000000 00000030 
                       SCREENH EQU              48
    6 00000000 40004100 
                       DC      EQU              0x40004100
    7 00000000 00000000 
                       DC_COMMAND
                               EQU              0
    8 00000000 00000040 
                       DC_DATA EQU              0x40
    9 00000000 40004200 
                       RESET   EQU              0x40004200
   10 00000000 00000000 
                       RESET_LOW
                               EQU              0
   11 00000000 00000080 
                       RESET_HIGH
                               EQU              0x80
   12 00000000 40004400 
                       GPIO_PORTA_DIR_R
                               EQU              0x40004400
   13 00000000 40004420 
                       GPIO_PORTA_AFSEL_R
                               EQU              0x40004420
   14 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
   15 00000000 40004528 
                       GPIO_PORTA_AMSEL_R
                               EQU              0x40004528
   16 00000000 4000452C 
                       GPIO_PORTA_PCTL_R
                               EQU              0x4000452C
   17 00000000 40004510 
                       GPIO_PORTA_PUR_R
                               EQU              0x40004510
   18 00000000         
   19 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   20 00000000 40025404 
                       GPIO_PORTF_IS_R
                               EQU              0x40025404
   21 00000000 4002540C 
                       GPIO_PORTF_IEV_R
                               EQU              0x4002540C
   22 00000000 40025410 
                       GPIO_PORTF_IM_R
                               EQU              0x40025410
   23 00000000 40025414 
                       GPIO_PORTF_RIS_R
                               EQU              0x40025414
   24 00000000 40025418 
                       GPIO_PORTF_MIS_R



ARM Macro Assembler    Page 2 


                               EQU              0x40025418
   25 00000000 4002541C 
                       GPIO_PORTF_ICR_R
                               EQU              0x4002541C
   26 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   27 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   28 00000000 40025514 
                       GPIO_PORTF_PDR_R
                               EQU              0x40025514
   29 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   30 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   31 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   32 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   33 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   34 00000000 40025408 
                       GPIO_PORTF_IBE_R
                               EQU              0x40025408
   35 00000000 E000E100 
                       NVIC    EQU              0xE000E100
   36 00000000         
   37 00000000 40008000 
                       SSI0_CR0_R
                               EQU              0x40008000
   38 00000000 40008004 
                       SSI0_CR1_R
                               EQU              0x40008004
   39 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   40 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   41 00000000 40008010 
                       SSI0_CPSR_R
                               EQU              0x40008010
   42 00000000 40008FC8 
                       SSI0_CC_R
                               EQU              0x40008FC8
   43 00000000 0000FF00 
                       SSI_CR0_SCR_M
                               EQU              0x0000FF00  ; SSI Serial Clock 
                                                            Rate
   44 00000000 00000080 
                       SSI_CR0_SPH
                               EQU              0x00000080  ; SSI Serial Clock 



ARM Macro Assembler    Page 3 


                                                            Phase
   45 00000000 00000040 
                       SSI_CR0_SPO
                               EQU              0x00000040  ; SSI Serial Clock 
                                                            Polarity
   46 00000000 00000030 
                       SSI_CR0_FRF_M
                               EQU              0x00000030  ; SSI Frame Format 
                                                            Select
   47 00000000 00000000 
                       SSI_CR0_FRF_MOTO
                               EQU              0x00000000  ; Freescale SPI Fra
                                                            me Format
   48 00000000 0000000F 
                       SSI_CR0_DSS_M
                               EQU              0x0000000F  ; SSI Data Size Sel
                                                            ect
   49 00000000 00000007 
                       SSI_CR0_DSS_8
                               EQU              0x00000007  ; 8-bit data
   50 00000000 00000004 
                       SSI_CR1_MS
                               EQU              0x00000004  ; SSI Master/Slave 
                                                            Select
   51 00000000 00000002 
                       SSI_CR1_SSE
                               EQU              0x00000002  ; SSI Synchronous S
                                                            erial Port
   52 00000000         ; Enable
   53 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   54 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   55 00000000 000000FF 
                       SSI_CPSR_CPSDVSR_M
                               EQU              0x000000FF  ; SSI Clock Prescal
                                                            e Divisor
   56 00000000 0000000F 
                       SSI_CC_CS_M
                               EQU              0x0000000F  ; SSI Baud Clock So
                                                            urce
   57 00000000 00000000 
                       SSI_CC_CS_SYSPLL
                               EQU              0x00000000  ; Either the system
                                                             clock (if the
   58 00000000         ; PLL bypass is in effect) or the
   59 00000000         ; PLL output (default)
   60 00000000 400FE104 
                       SYSCTL_RCGC1_R
                               EQU              0x400FE104
   61 00000000 400FE108 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE108
   62 00000000 00000010 
                       SYSCTL_RCGC1_SSI0
                               EQU              0x00000010  ; SSI0 Clock Gating



ARM Macro Assembler    Page 4 


                                                             Control
   63 00000000 00000001 
                       SYSCTL_RCGC2_GPIOA
                               EQU              0x00000001  ; port A Clock Gati
                                                            ng Control        
   64 00000000         ;ADC EQUs
   65 00000000         ; ADC Registers
   66 00000000 400FE638 
                       RCGCADC EQU              0x400FE638  ; ADC clock registe
                                                            r
   67 00000000         ; ADC0 base address EQU 0x40038000
   68 00000000 40038000 
                       ADC0_ACTSS
                               EQU              0x40038000  ; Sample sequencer 
                                                            (ADC0 base address)
                                                            
   69 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
   70 00000000 40038008 
                       ADC0_IM EQU              0x40038008  ; Interrupt select
   71 00000000 40038014 
                       ADC0_EMUX
                               EQU              0x40038014  ; Trigger select
   72 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
   73 00000000 400380A0 
                       ADC0_SSMUX3
                               EQU              0x400380A0  ; Input channel sel
                                                            ect
   74 00000000 400380A4 
                       ADC0_SSCTL3
                               EQU              0x400380A4  ; Sample sequence 3
                                                             control
   75 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                            
   76 00000000 40038080 
                       ADC0_SSMUX2
                               EQU              0x40038080  ; Input channel sel
                                                            ect
   77 00000000 40038FC4 
                       ADC0_PC EQU              0x40038FC4  ; Sample rate
   78 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C  ; Interrupt Status 
                                                            and Clear 
   79 00000000         ; ADC1 base address EQU 0x40039000
   80 00000000 40039000 
                       ADC1_ACTSS
                               EQU              0x40039000  ; Sample sequencer 
                                                            (ADC1 base address)
                                                            
   81 00000000 40039004 
                       ADC1_RIS
                               EQU              0x40039004  ; Interrupt status
   82 00000000 40039008 



ARM Macro Assembler    Page 5 


                       ADC1_IM EQU              0x40039008  ; Interrupt select
   83 00000000 40039014 
                       ADC1_EMUX
                               EQU              0x40039014  ; Trigger select
   84 00000000 40039028 
                       ADC1_PSSI
                               EQU              0x40039028  ; Initiate sample
   85 00000000 400390A0 
                       ADC1_SSMUX3
                               EQU              0x400390A0  ; Input channel sel
                                                            ect
   86 00000000 400390A4 
                       ADC1_SSCTL3
                               EQU              0x400390A4  ; Sample sequence 3
                                                             control
   87 00000000 400390A8 
                       ADC1_SSFIFO3
                               EQU              0x400390A8  ; Channel 3 results
                                                            
   88 00000000 40039080 
                       ADC1_SSMUX2
                               EQU              0x40039080  ; Input channel sel
                                                            ect
   89 00000000 40039FC4 
                       ADC1_PC EQU              0x40039FC4  ; Sample rate
   90 00000000 4003900C 
                       ADC1_ISC
                               EQU              0x4003900C  ; Interrupt Status 
                                                            and Clear 
   91 00000000         ; GPIO Registers
   92 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   93 00000000         ;PORT E base address EQU 0x40024000
   94 00000000 4002451C 
                       PORTE_DEN
                               EQU              0x4002451C  ; Digital Enable
   95 00000000 4002452C 
                       PORTE_PCTL
                               EQU              0x4002452C  ; Alternate functio
                                                            n select
   96 00000000 40024420 
                       PORTE_AFSEL
                               EQU              0x40024420  ; Enable Alt functi
                                                            ons
   97 00000000 40024528 
                       PORTE_AMSEL
                               EQU              0x40024528  ; Enable analog
   98 00000000 40024400 
                       PORTE_DIR
                               EQU              0x40024400  ; Direction 
   99 00000000         ;*******************************************************
                       ********
  100 00000000         ; Directives - This Data Section is part of the code
  101 00000000         ; It is in the read only section  so values cannot be ch
                       anged.
  102 00000000         
  103 00000000         



ARM Macro Assembler    Page 6 


  104 00000000         ;LABEL         DIRECTIVE VALUE  COMMENT
  105 00000000                 AREA             main, READONLY, CODE
  106 00000000                 THUMB
  107 00000000                 IMPORT           DELAY100
  108 00000000                 EXPORT           INIT        ; Make available 
  109 00000000         
  110 00000000         INIT    PROC
  111 00000000 B500            PUSH{LR}
  112 00000002         
  113 00000002         ;*********************SPI CONFIGURATION********STARTS***
                       ***************  
  114 00000002         
  115 00000002         ;SYSCTL_RCGC1_R |= SYSCTL_RCGC1_SSI0;  // activate SSI0
  116 00000002 48CB            LDR              R0,=SYSCTL_RCGC1_R
  117 00000004 6801            LDR              R1, [R0]
  118 00000006 F041 0110       ORR              R1, #0x10
  119 0000000A 6001            STR              R1, [R0]
  120 0000000C BF00            NOP
  121 0000000E BF00            NOP
  122 00000010 BF00            NOP
  123 00000012 BF00            NOP
  124 00000014 BF00            NOP
  125 00000016         ;    SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOA; // activate p
                       ort A 
  126 00000016         ;  We also use port E as a joystick   //activate port E
  127 00000016 48C7            LDR              R0,=SYSCTL_RCGC2_R
  128 00000018 6801            LDR              R1, [R0]
  129 0000001A F041 0131       ORR              R1, #0x31   ;activate port F fo
                                                            r buttons
  130 0000001E 6001            STR              R1, [R0]
  131 00000020 BF00            NOP
  132 00000022 BF00            NOP
  133 00000024 BF00            NOP
  134 00000026 BF00            NOP
  135 00000028 BF00            NOP
  136 0000002A         ;    delay = SYSCTL_RCGC2_R;               // allow time
                        to finish activating
  137 0000002A         
  138 0000002A         
  139 0000002A         ; interrupts for buttons
  140 0000002A F245 5020 
              F2C4 0002        MOV32            R0, GPIO_PORTF_LOCK_R
  141 00000032 F244 314B 
              F6C4 414F        MOV32            R1, #0x4C4F434B ; unlock
  142 0000003A 6001            STR              R1, [R0]
  143 0000003C         
  144 0000003C F245 5024 
              F2C4 0002        MOV32            R0, GPIO_PORTF_CR_R
  145 00000044 F04F 0111       MOV              R1, #0x11   ; commit for PF0
  146 00000048 6001            STR              R1, [R0]
  147 0000004A         
  148 0000004A F245 501C 
              F2C4 0002        MOV32            R0, GPIO_PORTF_DEN_R
  149 00000052 6801            LDR              R1, [R0]
  150 00000054 F041 0111       ORR              R1, #0x11   ; enable F0 and F4
  151 00000058 6001            STR              R1, [R0]
  152 0000005A         
  153 0000005A 48B7            LDR              R0,=GPIO_PORTF_AFSEL_R
  154 0000005C 6801            LDR              R1, [R0]



ARM Macro Assembler    Page 7 


  155 0000005E F021 0111       BIC              R1, #0x11   ; enable F0 and F4
  156 00000062 6001            STR              R1, [R0]
  157 00000064         
  158 00000064 F245 4000 
              F2C4 0002        MOV32            R0,GPIO_PORTF_DIR_R
  159 0000006C 6801            LDR              R1, [R0]
  160 0000006E F021 0111       BIC              R1, #0x11   ; input F0 and F4
  161 00000072 6001            STR              R1, [R0]
  162 00000074         
  163 00000074 F245 5010 
              F2C4 0002        MOV32            R0, GPIO_PORTF_PUR_R ; THE PULL
                                                             UP REGISTORS OF IN
                                                            PUT BITS ARE SET
  164 0000007C 6801            LDR              R1,[R0]
  165 0000007E F001 0100       AND              R1,#0x00
  166 00000082 F041 0111       ORR              R1,#0x11
  167 00000086 6001            STR              R1,[R0]
  168 00000088         
  169 00000088 F245 4010 
              F2C4 0002        MOV32            R0,GPIO_PORTF_IM_R
  170 00000090 6801            LDR              R1, [R0]
  171 00000092 F041 0111       ORR              R1, #0x11   ; interrupt mask F0
                                                             and F4
  172 00000096 6001            STR              R1, [R0]
  173 00000098         
  174 00000098 F245 4004 
              F2C4 0002        MOV32            R0,GPIO_PORTF_IS_R
  175 000000A0 6801            LDR              R1, [R0]
  176 000000A2 F021 0111       BIC              R1, #0x11   ; edge sensitivity 
                                                            F0 and F4
  177 000000A6 6001            STR              R1, [R0]
  178 000000A8         
  179 000000A8 F245 4008 
              F2C4 0002        MOV32            R0,GPIO_PORTF_IBE_R
  180 000000B0 6801            LDR              R1, [R0]
  181 000000B2 F021 0111       BIC              R1, #0x11   ; not both edges F0
                                                             and F4
  182 000000B6 6001            STR              R1, [R0]
  183 000000B8         
  184 000000B8 F245 400C 
              F2C4 0002        MOV32            R0,GPIO_PORTF_IEV_R
  185 000000C0 6801            LDR              R1, [R0]
  186 000000C2 F041 0111       ORR              R1, #0x11   ; rising edge F0 an
                                                            d F4
  187 000000C6 6001            STR              R1, [R0]
  188 000000C8         
  189 000000C8 F245 401C 
              F2C4 0002        MOV32            R0,GPIO_PORTF_ICR_R
  190 000000D0 6801            LDR              R1, [R0]
  191 000000D2 F041 0111       ORR              R1, #0x11   ; rising edge F0 an
                                                            d F4
  192 000000D6 6001            STR              R1, [R0]
  193 000000D8         
  194 000000D8 F24E 1000 
              F2CE 0000        MOV32            R0,NVIC
  195 000000E0 6801            LDR              R1, [R0]
  196 000000E2 F041 4180       ORR              R1, #0x40000000 ; NVIC
  197 000000E6 6001            STR              R1, [R0]
  198 000000E8         



ARM Macro Assembler    Page 8 


  199 000000E8         
  200 000000E8         
  201 000000E8         ;    GPIO_PORTA_DIR_R |= 0xC0;             // make PA2,3
                       ,5,6,7 out  (2=clk, 3=CSE, 5=SDin, 6=D/C, 7=Reset)
  202 000000E8 4894            LDR              R0,=GPIO_PORTA_DIR_R
  203 000000EA 6801            LDR              R1, [R0]
  204 000000EC F041 01EC       ORR              R1, #0xEC
  205 000000F0 6001            STR              R1, [R0]
  206 000000F2         ;    GPIO_PORTA_AFSEL_R &= ~0xC0;          // disable al
                       t funct on PA6,7
  207 000000F2 4893            LDR              R0,=GPIO_PORTA_AFSEL_R
  208 000000F4 6801            LDR              R1, [R0]
  209 000000F6 F021 01C0       BIC              R1, #0xC0
  210 000000FA 6001            STR              R1, [R0]
  211 000000FC         ;    GPIO_PORTA_AFSEL_R |= 0x2C;           // enable alt
                        funct on PA2,3,5
  212 000000FC 4890            LDR              R0,=GPIO_PORTA_AFSEL_R
  213 000000FE 6801            LDR              R1, [R0]
  214 00000100 F041 012C       ORR              R1, #0x2C
  215 00000104 6001            STR              R1, [R0]
  216 00000106         
  217 00000106         ;    GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R&0x00FFFFFF)+
                       0x00000000;
  218 00000106 488F            LDR              R0,=GPIO_PORTA_PCTL_R
  219 00000108 6801            LDR              R1, [R0]
  220 0000010A 4A8F            LDR              R2, =0xFF0F00FF
  221 0000010C EA21 0102       BIC              R1, R2
  222 00000110 4A8E            LDR              R2, =0x00202200 ; PA2,3,5
  223 00000112 EA42 0201       ORR              R2, R1
  224 00000116 6001            STR              R1, [R0]
  225 00000118         
  226 00000118         ;    GPIO_PORTA_DEN_R |= 0xEC;             // enable dig
                       ital I/O on PA2,3,5,6,7
  227 00000118 488D            LDR              R0,=GPIO_PORTA_DEN_R
  228 0000011A 6801            LDR              R1, [R0]
  229 0000011C F041 01EC       ORR              R1, #0xEC
  230 00000120 6001            STR              R1, [R0]
  231 00000122         
  232 00000122         ;   GPIO pull up        // pull-up which are also AFSEL 
                       PA2,3,5
  233 00000122 488C            LDR              R0,=GPIO_PORTA_PUR_R
  234 00000124 6801            LDR              R1, [R0]
  235 00000126 F041 012C       ORR              R1, #0x2C
  236 0000012A 6001            STR              R1, [R0]
  237 0000012C         ;    // configure PA2,3,5 as SSI
  238 0000012C         ;    GPIO_PORTA_PCTL_R = (GPIO_PORTA_PCTL_R&0xFF0F00FF)+
                       0x00202200;
  239 0000012C         ;    // configure PA6,7 as GPIO
  240 0000012C         
  241 0000012C         
  242 0000012C         ;    GPIO_PORTA_AMSEL_R &= ~0xEC;          // disable an
                       alog functionality on PA2,3,5,6,7
  243 0000012C         
  244 0000012C 488A            LDR              R0,=GPIO_PORTA_AMSEL_R
  245 0000012E 6801            LDR              R1, [R0]
  246 00000130 F021 01EC       BIC              R1, #0xEC
  247 00000134 6001            STR              R1, [R0]
  248 00000136         
  249 00000136         ;    SSI0_CR1_R &= ~SSI_CR1_SSE;           // disable SS



ARM Macro Assembler    Page 9 


                       I
  250 00000136 4889            LDR              R0,=SSI0_CR1_R
  251 00000138 6801            LDR              R1, [R0]
  252 0000013A F021 0102       BIC              R1, #0x2
  253 0000013E 6001            STR              R1, [R0]
  254 00000140         ;    SSI0_CR1_R &= ~SSI_CR1_MS;            // master mod
                       e
  255 00000140 4886            LDR              R0,=SSI0_CR1_R
  256 00000142 6801            LDR              R1, [R0]
  257 00000144 F021 0104       BIC              R1, #0x4
  258 00000148 6001            STR              R1, [R0]
  259 0000014A         ;    // configure for system clock/PLL baud clock source
                       
  260 0000014A         ;    SSI0_CC_R = (SSI0_CC_R&~SSI_CC_CS_M)+SSI_CC_CS_SYSP
                       LL;
  261 0000014A 4885            LDR              R0,=SSI0_CC_R
  262 0000014C 6801            LDR              R1, [R0]
  263 0000014E F021 01FF       BIC              R1, #0xFF
  264 00000152 6001            STR              R1, [R0]
  265 00000154         ;    // clock divider for 3.33 MHz SSIClk (80(bizce 16 M
                       Hz) MHz PLL/24(256))
  266 00000154         ;    // SysClk/(CPSDVSR*(1+SCR))
  267 00000154         ;    // 80/(24*(1+0)) = 3.33 MHz (slower than 4 MHz)
  268 00000154         ;    SSI0_CPSR_R = (SSI0_CPSR_R&~SSI_CPSR_CPSDVSR_M)+24;
                        // must be even number
  269 00000154 4883            LDR              R0,=SSI0_CPSR_R ; Max value for
                                                             the peripheral dev
                                                            ice is 100Khz so we
                                                             give 16Mhz/254 =63
                                                             kHZ
  270 00000156 6801            LDR              R1, [R0]
  271 00000158 F021 01FF       BIC              R1, #0xFF
  272 0000015C F041 01FE       ORR              R1, #0xFE   ; 0d254  
  273 00000160 6001            STR              R1, [R0]
  274 00000162         ;    SSI0_CR0_R &= ~(SSI_CR0_SCR_M |       // SCR = 0 (3
                       .33 Mbps data rate)
  275 00000162         ;               SSI_CR0_SPH |         // SPH = 0
  276 00000162         ;               SSI_CR0_SPO);         // SPO = 0
  277 00000162         ;    // FRF = Freescale format
  278 00000162         ;    SSI0_CR0_R = (SSI0_CR0_R&~SSI_CR0_FRF_M)+SSI_CR0_FR
                       F_MOTO;
  279 00000162         ;    // DSS = 8-bit data
  280 00000162         ;    SSI0_CR0_R = (SSI0_CR0_R&~SSI_CR0_DSS_M)+SSI_CR0_DS
                       S_8;
  281 00000162 4881            LDR              R0,=SSI0_CR0_R
  282 00000164 6801            LDR              R1, [R0]
  283 00000166 F64F 72FF       LDR              R2, =0xFFFF ; Son bit for accur
                                                            acy
  284 0000016A EA21 0102       BIC              R1, R2
  285 0000016E F041 0107       ORR              R1, #0x7
  286 00000172 6001            STR              R1, [R0]
  287 00000174         ;    SSI0_CR1_R |= SSI_CR1_SSE;            // enable SSI
                       
  288 00000174 4879            LDR              R0,=SSI0_CR1_R
  289 00000176 6801            LDR              R1, [R0]
  290 00000178 F041 0102       ORR              R1, #0x2
  291 0000017C 6001            STR              R1, [R0]
  292 0000017E         ;*********************SPI CONFIGURATION********ENDS*****
                       *



ARM Macro Assembler    Page 10 


  293 0000017E         
  294 0000017E         
  295 0000017E         ;*********************LCD CONFIGURATION********STARTS***
                       ***
  296 0000017E         
  297 0000017E         ; RESET = RESET_LOW;                    // reset the LCD
                        to a known state
  298 0000017E 487B            LDR              R0,=RESET
  299 00000180 6801            LDR              R1, [R0]
  300 00000182 F04F 0100       MOV              R1, #0x0
  301 00000186 6001            STR              R1, [R0]
  302 00000188         ;    for(delay=0; delay<10; delay=delay+1);// delay mini
                       mum 100 ns
  303 00000188 F7FF FFFE       BL               DELAY100
  304 0000018C         ;    RESET = RESET_HIGH;                   // negative l
                       ogic
  305 0000018C 4877            LDR              R0,=RESET
  306 0000018E 6801            LDR              R1, [R0]
  307 00000190 F04F 0180       MOV              R1, #0x80
  308 00000194 6001            STR              R1, [R0]
  309 00000196         ;    lcdwrite(COMMAND, 0x21);              // chip activ
                       e; horizontal addressing mode (V = 0); use extended inst
                       ruction set (H = 1)
  310 00000196         ;    // set LCD Vop (contrast), which may require some t
                       weaking:
  311 00000196         ;    lcdwrite(COMMAND, CONTRAST);          // try 0xB1 (
                       for 3.3V red SparkFun), 0xB8 (for 3.3V blue SparkFun), 0
                       xBF if your display is too dark, or 0x80 to 0xFF if expe
                       rimenting
  312 00000196         ;    lcdwrite(COMMAND, 0x04);              // set temp c
                       oefficient
  313 00000196         ;    lcdwrite(COMMAND, 0x14);              // LCD bias m
                       ode 1:48: try 0x13 or 0x14
  314 00000196         ;    lcdwrite(COMMAND, 0x20);              // we must se
                       nd 0x20 before modifying the display control mode
  315 00000196         ;    lcdwrite(COMMAND, 0x0C);              // set displa
                       y control to normal mode: 0x0D for inverse
  316 00000196         ;void static lcdwrite(enum typeOfWrite type, uint8_t mes
                       sage){
  317 00000196         ;    if(type == COMMAND){
  318 00000196         ;        // wait until SSI0 not busy/transmit FIFO empty
                       
  319 00000196         ;        while((SSI0_SR_R&SSI_SR_BSY)==SSI_SR_BSY){};
  320 00000196         ;        DC = DC_COMMAND;
  321 00000196         ;        SSI0_DR_R = message;                // command 
                       out
  322 00000196         ;        // wait until SSI0 not busy/transmit FIFO empty
                       
  323 00000196         ;        while((SSI0_SR_R&SSI_SR_BSY)==SSI_SR_BSY){};
  324 00000196         ;    } else{
  325 00000196         ;        while((SSI0_SR_R&SSI_SR_TNF)==0){}; // wait unt
                       il transmit FIFO not full
  326 00000196         ;        DC = DC_DATA;
  327 00000196         ;        SSI0_DR_R = message;                // data out
                       
  328 00000196         ;    }
  329 00000196         ;}
  330 00000196         
  331 00000196 4876    BUSY1   LDR              R0,=SSI0_SR_R



ARM Macro Assembler    Page 11 


  332 00000198 6801            LDR              R1, [R0]
  333 0000019A F001 0110       AND              R1, #0x10
  334 0000019E 2910            CMP              R1, #0x10
  335 000001A0 D0F9            BEQ              BUSY1
  336 000001A2 4874            LDR              R0, =DC     ;dc_command  
  337 000001A4 F04F 0100       MOV              R1, #0
  338 000001A8 6001            STR              R1, [R0]
  339 000001AA         ; sent 0x21
  340 000001AA 4873            LDR              R0,=SSI0_DR_R
  341 000001AC F04F 0121       MOV              R1, #0x21   ; H=1
  342 000001B0 6001            STR              R1, [R0]
  343 000001B2         
  344 000001B2         
  345 000001B2 486F    BUSY3   LDR              R0,=SSI0_SR_R
  346 000001B4 6801            LDR              R1, [R0]
  347 000001B6 F001 0110       AND              R1, #0x10
  348 000001BA 2910            CMP              R1, #0x10
  349 000001BC D0F9            BEQ              BUSY3
  350 000001BE 486D            LDR              R0, =DC     ;dc_command  
  351 000001C0 F04F 0100       MOV              R1, #0
  352 000001C4 6001            STR              R1, [R0]
  353 000001C6         ; sent
  354 000001C6 486C            LDR              R0,=SSI0_DR_R
  355 000001C8 F04F 0113       MOV              R1, #0x13   ;   ;  BIas System 
                                                            MUX Rate = 1:48 whi
                                                            ch makes  the n =4?
                                                            ?? 
  356 000001CC 6001            STR              R1, [R0]
  357 000001CE         
  358 000001CE 4868    BUSY    LDR              R0,=SSI0_SR_R
  359 000001D0 6801            LDR              R1, [R0]
  360 000001D2 F001 0110       AND              R1, #0x10
  361 000001D6 2910            CMP              R1, #0x10
  362 000001D8 D0F9            BEQ              BUSY
  363 000001DA 4866            LDR              R0, =DC     ;dc_command  
  364 000001DC F04F 0100       MOV              R1, #0
  365 000001E0 6001            STR              R1, [R0]
  366 000001E2         ; sent
  367 000001E2 4865            LDR              R0,=SSI0_DR_R
  368 000001E4 F04F 01BF       MOV              R1, #0xBF   ; Vlcd=3.3 V we hop
                                                            e
  369 000001E8 6001            STR              R1, [R0]
  370 000001EA         
  371 000001EA         
  372 000001EA 4861    BUSY2   LDR              R0,=SSI0_SR_R
  373 000001EC 6801            LDR              R1, [R0]
  374 000001EE F001 0110       AND              R1, #0x10
  375 000001F2 2910            CMP              R1, #0x10
  376 000001F4 D0F9            BEQ              BUSY2
  377 000001F6 485F            LDR              R0, =DC     ;dc_command  
  378 000001F8 F04F 0100       MOV              R1, #0
  379 000001FC 6001            STR              R1, [R0]
  380 000001FE         ; sent
  381 000001FE 485E            LDR              R0,=SSI0_DR_R
  382 00000200 F04F 0107       MOV              R1, #0x07   ; temperature coeff
                                                            icient 3
  383 00000204 6001            STR              R1, [R0]
  384 00000206         
  385 00000206         



ARM Macro Assembler    Page 12 


  386 00000206 485A    BUSY4   LDR              R0,=SSI0_SR_R
  387 00000208 6801            LDR              R1, [R0]
  388 0000020A F001 0110       AND              R1, #0x10
  389 0000020E 2910            CMP              R1, #0x10
  390 00000210 D0F9            BEQ              BUSY4
  391 00000212 4858            LDR              R0, =DC     ;dc_command  
  392 00000214 F04F 0100       MOV              R1, #0
  393 00000218 6001            STR              R1, [R0]
  394 0000021A         ; sent
  395 0000021A 4857            LDR              R0,=SSI0_DR_R
  396 0000021C F04F 0120       MOV              R1, #0x20   ; H = 0
  397 00000220 6001            STR              R1, [R0]
  398 00000222         
  399 00000222 4853    BUSY5   LDR              R0,=SSI0_SR_R
  400 00000224 6801            LDR              R1, [R0]
  401 00000226 F001 0110       AND              R1, #0x10
  402 0000022A 2910            CMP              R1, #0x10
  403 0000022C D0F9            BEQ              BUSY5
  404 0000022E 4851            LDR              R0, =DC     ;dc_command  
  405 00000230 F04F 0100       MOV              R1, #0
  406 00000234 6001            STR              R1, [R0]
  407 00000236         ; sent
  408 00000236 4850            LDR              R0,=SSI0_DR_R
  409 00000238 F04F 010C       MOV              R1, #0x0C   ; Display Control -
                                                            > Normal Mode
  410 0000023C 6001            STR              R1, [R0]
  411 0000023E         
  412 0000023E         ;BURDA BI SEY VAR
  413 0000023E         
  414 0000023E 484C    BUSY6   LDR              R0,=SSI0_SR_R
  415 00000240 6801            LDR              R1, [R0]
  416 00000242 F001 0110       AND              R1, #0x10
  417 00000246 2910            CMP              R1, #0x10
  418 00000248 D0F9            BEQ              BUSY6
  419 0000024A 484A            LDR              R0, =DC     ;dc_command  
  420 0000024C F04F 0100       MOV              R1, #0
  421 00000250 6001            STR              R1, [R0]
  422 00000252         ; sent
  423 00000252 4849            LDR              R0,=SSI0_DR_R
  424 00000254 F04F 0180       MOV              R1, #0x80   ; CURSOR RESET X=0
  425 00000258 6001            STR              R1, [R0]
  426 0000025A         
  427 0000025A 4845    BUSY7   LDR              R0,=SSI0_SR_R
  428 0000025C 6801            LDR              R1, [R0]
  429 0000025E F001 0110       AND              R1, #0x10
  430 00000262 2910            CMP              R1, #0x10
  431 00000264 D0F9            BEQ              BUSY7
  432 00000266 4843            LDR              R0, =DC     ;dc_command  
  433 00000268 F04F 0100       MOV              R1, #0
  434 0000026C 6001            STR              R1, [R0]
  435 0000026E         ; sent
  436 0000026E 4842            LDR              R0,=SSI0_DR_R
  437 00000270 F04F 0140       MOV              R1, #0x40   ;  CURSOR RESET Y=0
                                                            
  438 00000274 6001            STR              R1, [R0]
  439 00000276         ;*********************LCD CONFIGURATION********ENDS*****
                       *
  440 00000276         
  441 00000276         ;*********************ADC CONFIGURATION********STARTS***



ARM Macro Assembler    Page 13 


                       ***************   
  442 00000276         ; We initialize PE3 which is AIN0
  443 00000276 4941            LDR              R1, =RCGCADC 
                                                            ; Turn on ADC clock
                                                            
  444 00000278 6808            LDR              R0, [R1]
  445 0000027A F040 0003       ORR              R0, R0, #0x03 ; set bit 0 and 1
                                                             to enable ADC0 and
                                                             ADC1 clock
  446 0000027E 6008            STR              R0, [R1]
  447 00000280 BF00            NOP
  448 00000282 BF00            NOP
  449 00000284 BF00            NOP
  450 00000286         
  451 00000286         ; Setup GPIO to make PE3 and PE2 input for ADC0       //
                        ADC initialization for E3 and E2
  452 00000286 493E            LDR              R1, =PORTE_DIR
  453 00000288 6808            LDR              R0, [R1]
  454 0000028A F020 000C       BIC              R0, R0, #0x0C ; clear bit 3 to 
                                                            set as input
  455 0000028E 6008            STR              R0, [R1]
  456 00000290         ; Enable alternate functions
  457 00000290 493C            LDR              R1, =PORTE_AFSEL
  458 00000292 6808            LDR              R0, [R1]
  459 00000294 F040 000C       ORR              R0, R0, #0x0C ; set bit 3 to en
                                                            able alt functions 
                                                            on PE3 and PE2
  460 00000298 6008            STR              R0, [R1]
  461 0000029A         ; PCTL does not have to be configured
  462 0000029A         ; since ADC0 is automatically selected when
  463 0000029A         ; port pin is set to analog.
  464 0000029A         ; Disable digital on PE3 and PE2
  465 0000029A 493B            LDR              R1, =PORTE_DEN
  466 0000029C 6808            LDR              R0, [R1]
  467 0000029E F020 000C       BIC              R0, R0, #0x0C ; clear bit 3 to 
                                                            disable digital on 
                                                            PE3 and PE2
  468 000002A2 6008            STR              R0, [R1]
  469 000002A4         ; Enable analog on PE3 and PE2
  470 000002A4 4939            LDR              R1, =PORTE_AMSEL
  471 000002A6 6808            LDR              R0, [R1]
  472 000002A8 F040 000C       ORR              R0, R0, #0x0C ; set bit 3 to en
                                                            able analog on PE3 
                                                            and PE2
  473 000002AC 6008            STR              R0, [R1]
  474 000002AE         ; Disable SS3 while ADC0 setup
  475 000002AE 4938            LDR              R1, =ADC0_ACTSS
  476 000002B0 6808            LDR              R0, [R1]    ; we use SS3
  477 000002B2 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable SS3 for con
                                                            figuration
  478 000002B6 6008            STR              R0, [R1]
  479 000002B8         ; Disable SS3 while ADC1 setup
  480 000002B8 4936            LDR              R1, =ADC1_ACTSS
  481 000002BA 6808            LDR              R0, [R1]    ; we use SS3
  482 000002BC F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable SS3 for con
                                                            figuration
  483 000002C0 6008            STR              R0, [R1]



ARM Macro Assembler    Page 14 


  484 000002C2         ; Select trigger source
  485 000002C2 4935            LDR              R1, =ADC0_EMUX
  486 000002C4 6808            LDR              R0, [R1]
  487 000002C6 F420 6070       BIC              R0, R0, #0x0F00 ; clear bits 11
                                                            :8 to select trigge
                                                            r by SOFTWARE <- 4b
                                                            '0000
  488 000002CA 6008            STR              R0, [R1]    ; trigger
  489 000002CC 4933            LDR              R1, =ADC1_EMUX
  490 000002CE 6808            LDR              R0, [R1]
  491 000002D0 F420 6070       BIC              R0, R0, #0x0F00 ; clear bits 11
                                                            :8 to select trigge
                                                            r by SOFTWARE <- 4b
                                                            '0000
  492 000002D4 6008            STR              R0, [R1]    ; trigger
  493 000002D6         ; Select input channel
  494 000002D6 4932            LDR              R1, =ADC0_SSMUX3
  495 000002D8 6808            LDR              R0, [R1]
  496 000002DA F020 000F       BIC              R0, R0, #0x000F ; clear bits 3:
                                                            0 to select AIN0 <-
                                                            0b0000
  497 000002DE 6008            STR              R0, [R1]
  498 000002E0         ; Config sample sequence
  499 000002E0 4930            LDR              R1, =ADC0_SSCTL3
  500 000002E2 6808            LDR              R0, [R1]
  501 000002E4 F040 0006       ORR              R0, R0, #0x06 ; set bits 2:1 (I
                                                            E0, END0) 
  502 000002E8 6008            STR              R0, [R1]
  503 000002EA         
  504 000002EA         ; Select input channel
  505 000002EA 492F            LDR              R1, =ADC1_SSMUX3
  506 000002EC 6808            LDR              R0, [R1]
  507 000002EE F020 000F       BIC              R0, R0, #0x000F ; clear bits 3:
                                                            0 to select AIN1 <-
                                                            0b0001
  508 000002F2 F040 0001       ORR              R0, #0x1
  509 000002F6 6008            STR              R0, [R1]
  510 000002F8         ; Config sample sequence
  511 000002F8 492C            LDR              R1, =ADC1_SSCTL3
  512 000002FA 6808            LDR              R0, [R1]
  513 000002FC F040 0006       ORR              R0, R0, #0x06 ; set bits 2:1 (I
                                                            E0, END0) 
  514 00000300 6008            STR              R0, [R1]
  515 00000302         
  516 00000302         ; Set sample rate
  517 00000302 492B            LDR              R1, =ADC0_PC
  518 00000304 6808            LDR              R0, [R1]
  519 00000306 F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125 ksps
  520 0000030A 6008            STR              R0, [R1]
  521 0000030C         ; Set sample rate
  522 0000030C 4929            LDR              R1, =ADC1_PC
  523 0000030E 6808            LDR              R0, [R1]
  524 00000310 F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125 ksps
  525 00000314 6008            STR              R0, [R1]
  526 00000316         
  527 00000316         ; Done with setup, enable sequencer
  528 00000316 491E            LDR              R1, =ADC0_ACTSS



ARM Macro Assembler    Page 15 


  529 00000318 6808            LDR              R0, [R1]
  530 0000031A F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able SS3
  531 0000031E 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  532 00000320 491C            LDR              R1, =ADC1_ACTSS
  533 00000322 6808            LDR              R0, [R1]
  534 00000324 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able SS3
  535 00000328 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  536 0000032A         ;*********************ADC CONFIGURATION********ENDS*****
                       *************  
  537 0000032A         
  538 0000032A F85D EB04       POP{LR}
  539 0000032E 4770            BX               LR
  540 00000330                 ENDP
  541 00000330                 ALIGN
  542 00000330                 END
              400FE104 
              400FE108 
              40025420 
              40004400 
              40004420 
              4000452C 
              FF0F00FF 
              00202200 
              4000451C 
              40004510 
              40004528 
              40008004 
              40008FC8 
              40008010 
              40008000 
              40004200 
              4000800C 
              40004100 
              40008008 
              400FE638 
              40024400 
              40024420 
              4002451C 
              40024528 
              40038000 
              40039000 
              40038014 
              40039014 
              400380A0 
              400380A4 
              400390A0 
              400390A4 
              40038FC4 
              40039FC4 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\init.d -o.\objects\init.o -I.\RTE\_Target_1 -IC:\Keil
_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CMSIS\
Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --



ARM Macro Assembler    Page 16 


predefine="TM4C123GH6PM SETA 1" --list=.\listings\init.lst INIT.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BUSY 000001CE

Symbol: BUSY
   Definitions
      At line 358 in file INIT.s
   Uses
      At line 362 in file INIT.s
Comment: BUSY used once
BUSY1 00000196

Symbol: BUSY1
   Definitions
      At line 331 in file INIT.s
   Uses
      At line 335 in file INIT.s
Comment: BUSY1 used once
BUSY2 000001EA

Symbol: BUSY2
   Definitions
      At line 372 in file INIT.s
   Uses
      At line 376 in file INIT.s
Comment: BUSY2 used once
BUSY3 000001B2

Symbol: BUSY3
   Definitions
      At line 345 in file INIT.s
   Uses
      At line 349 in file INIT.s
Comment: BUSY3 used once
BUSY4 00000206

Symbol: BUSY4
   Definitions
      At line 386 in file INIT.s
   Uses
      At line 390 in file INIT.s
Comment: BUSY4 used once
BUSY5 00000222

Symbol: BUSY5
   Definitions
      At line 399 in file INIT.s
   Uses
      At line 403 in file INIT.s
Comment: BUSY5 used once
BUSY6 0000023E

Symbol: BUSY6
   Definitions
      At line 414 in file INIT.s
   Uses
      At line 418 in file INIT.s
Comment: BUSY6 used once
BUSY7 0000025A

Symbol: BUSY7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 427 in file INIT.s
   Uses
      At line 431 in file INIT.s
Comment: BUSY7 used once
INIT 00000000

Symbol: INIT
   Definitions
      At line 110 in file INIT.s
   Uses
      At line 108 in file INIT.s
Comment: INIT used once
main 00000000

Symbol: main
   Definitions
      At line 105 in file INIT.s
   Uses
      None
Comment: main unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ACTSS 40038000

Symbol: ADC0_ACTSS
   Definitions
      At line 68 in file INIT.s
   Uses
      At line 475 in file INIT.s
      At line 528 in file INIT.s

ADC0_EMUX 40038014

Symbol: ADC0_EMUX
   Definitions
      At line 71 in file INIT.s
   Uses
      At line 485 in file INIT.s
Comment: ADC0_EMUX used once
ADC0_IM 40038008

Symbol: ADC0_IM
   Definitions
      At line 70 in file INIT.s
   Uses
      None
Comment: ADC0_IM unused
ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 78 in file INIT.s
   Uses
      None
Comment: ADC0_ISC unused
ADC0_PC 40038FC4

Symbol: ADC0_PC
   Definitions
      At line 77 in file INIT.s
   Uses
      At line 517 in file INIT.s
Comment: ADC0_PC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 72 in file INIT.s
   Uses
      None
Comment: ADC0_PSSI unused
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 69 in file INIT.s
   Uses
      None
Comment: ADC0_RIS unused
ADC0_SSCTL3 400380A4




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: ADC0_SSCTL3
   Definitions
      At line 74 in file INIT.s
   Uses
      At line 499 in file INIT.s
Comment: ADC0_SSCTL3 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 75 in file INIT.s
   Uses
      None
Comment: ADC0_SSFIFO3 unused
ADC0_SSMUX2 40038080

Symbol: ADC0_SSMUX2
   Definitions
      At line 76 in file INIT.s
   Uses
      None
Comment: ADC0_SSMUX2 unused
ADC0_SSMUX3 400380A0

Symbol: ADC0_SSMUX3
   Definitions
      At line 73 in file INIT.s
   Uses
      At line 494 in file INIT.s
Comment: ADC0_SSMUX3 used once
ADC1_ACTSS 40039000

Symbol: ADC1_ACTSS
   Definitions
      At line 80 in file INIT.s
   Uses
      At line 480 in file INIT.s
      At line 532 in file INIT.s

ADC1_EMUX 40039014

Symbol: ADC1_EMUX
   Definitions
      At line 83 in file INIT.s
   Uses
      At line 489 in file INIT.s
Comment: ADC1_EMUX used once
ADC1_IM 40039008

Symbol: ADC1_IM
   Definitions
      At line 82 in file INIT.s
   Uses
      None
Comment: ADC1_IM unused
ADC1_ISC 4003900C

Symbol: ADC1_ISC
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 90 in file INIT.s
   Uses
      None
Comment: ADC1_ISC unused
ADC1_PC 40039FC4

Symbol: ADC1_PC
   Definitions
      At line 89 in file INIT.s
   Uses
      At line 522 in file INIT.s
Comment: ADC1_PC used once
ADC1_PSSI 40039028

Symbol: ADC1_PSSI
   Definitions
      At line 84 in file INIT.s
   Uses
      None
Comment: ADC1_PSSI unused
ADC1_RIS 40039004

Symbol: ADC1_RIS
   Definitions
      At line 81 in file INIT.s
   Uses
      None
Comment: ADC1_RIS unused
ADC1_SSCTL3 400390A4

Symbol: ADC1_SSCTL3
   Definitions
      At line 86 in file INIT.s
   Uses
      At line 511 in file INIT.s
Comment: ADC1_SSCTL3 used once
ADC1_SSFIFO3 400390A8

Symbol: ADC1_SSFIFO3
   Definitions
      At line 87 in file INIT.s
   Uses
      None
Comment: ADC1_SSFIFO3 unused
ADC1_SSMUX2 40039080

Symbol: ADC1_SSMUX2
   Definitions
      At line 88 in file INIT.s
   Uses
      None
Comment: ADC1_SSMUX2 unused
ADC1_SSMUX3 400390A0

Symbol: ADC1_SSMUX3
   Definitions
      At line 85 in file INIT.s
   Uses
      At line 505 in file INIT.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: ADC1_SSMUX3 used once
DC 40004100

Symbol: DC
   Definitions
      At line 6 in file INIT.s
   Uses
      At line 336 in file INIT.s
      At line 350 in file INIT.s
      At line 363 in file INIT.s
      At line 377 in file INIT.s
      At line 391 in file INIT.s
      At line 404 in file INIT.s
      At line 419 in file INIT.s
      At line 432 in file INIT.s

DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 7 in file INIT.s
   Uses
      None
Comment: DC_COMMAND unused
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 8 in file INIT.s
   Uses
      None
Comment: DC_DATA unused
GPIO_PORTA_AFSEL_R 40004420

Symbol: GPIO_PORTA_AFSEL_R
   Definitions
      At line 13 in file INIT.s
   Uses
      At line 207 in file INIT.s
      At line 212 in file INIT.s

GPIO_PORTA_AMSEL_R 40004528

Symbol: GPIO_PORTA_AMSEL_R
   Definitions
      At line 15 in file INIT.s
   Uses
      At line 244 in file INIT.s
Comment: GPIO_PORTA_AMSEL_R used once
GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 14 in file INIT.s
   Uses
      At line 227 in file INIT.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 12 in file INIT.s
   Uses
      At line 202 in file INIT.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTA_PCTL_R 4000452C

Symbol: GPIO_PORTA_PCTL_R
   Definitions
      At line 16 in file INIT.s
   Uses
      At line 218 in file INIT.s
Comment: GPIO_PORTA_PCTL_R used once
GPIO_PORTA_PUR_R 40004510

Symbol: GPIO_PORTA_PUR_R
   Definitions
      At line 17 in file INIT.s
   Uses
      At line 233 in file INIT.s
Comment: GPIO_PORTA_PUR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 26 in file INIT.s
   Uses
      At line 153 in file INIT.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 32 in file INIT.s
   Uses
      None
Comment: GPIO_PORTF_AMSEL_R unused
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 30 in file INIT.s
   Uses
      At line 144 in file INIT.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 31 in file INIT.s
   Uses
      At line 148 in file INIT.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 19 in file INIT.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 158 in file INIT.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_IBE_R 40025408

Symbol: GPIO_PORTF_IBE_R
   Definitions
      At line 34 in file INIT.s
   Uses
      At line 179 in file INIT.s
Comment: GPIO_PORTF_IBE_R used once
GPIO_PORTF_ICR_R 4002541C

Symbol: GPIO_PORTF_ICR_R
   Definitions
      At line 25 in file INIT.s
   Uses
      At line 189 in file INIT.s
Comment: GPIO_PORTF_ICR_R used once
GPIO_PORTF_IEV_R 4002540C

Symbol: GPIO_PORTF_IEV_R
   Definitions
      At line 21 in file INIT.s
   Uses
      At line 184 in file INIT.s
Comment: GPIO_PORTF_IEV_R used once
GPIO_PORTF_IM_R 40025410

Symbol: GPIO_PORTF_IM_R
   Definitions
      At line 22 in file INIT.s
   Uses
      At line 169 in file INIT.s
Comment: GPIO_PORTF_IM_R used once
GPIO_PORTF_IS_R 40025404

Symbol: GPIO_PORTF_IS_R
   Definitions
      At line 20 in file INIT.s
   Uses
      At line 174 in file INIT.s
Comment: GPIO_PORTF_IS_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 29 in file INIT.s
   Uses
      At line 140 in file INIT.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_MIS_R 40025418

Symbol: GPIO_PORTF_MIS_R
   Definitions
      At line 24 in file INIT.s
   Uses
      None
Comment: GPIO_PORTF_MIS_R unused



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 33 in file INIT.s
   Uses
      None
Comment: GPIO_PORTF_PCTL_R unused
GPIO_PORTF_PDR_R 40025514

Symbol: GPIO_PORTF_PDR_R
   Definitions
      At line 28 in file INIT.s
   Uses
      None
Comment: GPIO_PORTF_PDR_R unused
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 27 in file INIT.s
   Uses
      At line 163 in file INIT.s
Comment: GPIO_PORTF_PUR_R used once
GPIO_PORTF_RIS_R 40025414

Symbol: GPIO_PORTF_RIS_R
   Definitions
      At line 23 in file INIT.s
   Uses
      None
Comment: GPIO_PORTF_RIS_R unused
NVIC E000E100

Symbol: NVIC
   Definitions
      At line 35 in file INIT.s
   Uses
      At line 194 in file INIT.s
Comment: NVIC used once
PORTE_AFSEL 40024420

Symbol: PORTE_AFSEL
   Definitions
      At line 96 in file INIT.s
   Uses
      At line 457 in file INIT.s
Comment: PORTE_AFSEL used once
PORTE_AMSEL 40024528

Symbol: PORTE_AMSEL
   Definitions
      At line 97 in file INIT.s
   Uses
      At line 470 in file INIT.s
Comment: PORTE_AMSEL used once
PORTE_DEN 4002451C

Symbol: PORTE_DEN



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 94 in file INIT.s
   Uses
      At line 465 in file INIT.s
Comment: PORTE_DEN used once
PORTE_DIR 40024400

Symbol: PORTE_DIR
   Definitions
      At line 98 in file INIT.s
   Uses
      At line 452 in file INIT.s
Comment: PORTE_DIR used once
PORTE_PCTL 4002452C

Symbol: PORTE_PCTL
   Definitions
      At line 95 in file INIT.s
   Uses
      None
Comment: PORTE_PCTL unused
RCGCADC 400FE638

Symbol: RCGCADC
   Definitions
      At line 66 in file INIT.s
   Uses
      At line 443 in file INIT.s
Comment: RCGCADC used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 92 in file INIT.s
   Uses
      None
Comment: RCGCGPIO unused
RESET 40004200

Symbol: RESET
   Definitions
      At line 9 in file INIT.s
   Uses
      At line 298 in file INIT.s
      At line 305 in file INIT.s

RESET_HIGH 00000080

Symbol: RESET_HIGH
   Definitions
      At line 11 in file INIT.s
   Uses
      None
Comment: RESET_HIGH unused
RESET_LOW 00000000

Symbol: RESET_LOW
   Definitions
      At line 10 in file INIT.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: RESET_LOW unused
SCREENH 00000030

Symbol: SCREENH
   Definitions
      At line 5 in file INIT.s
   Uses
      None
Comment: SCREENH unused
SCREENW 00000054

Symbol: SCREENW
   Definitions
      At line 4 in file INIT.s
   Uses
      None
Comment: SCREENW unused
SSI0_CC_R 40008FC8

Symbol: SSI0_CC_R
   Definitions
      At line 42 in file INIT.s
   Uses
      At line 261 in file INIT.s
Comment: SSI0_CC_R used once
SSI0_CPSR_R 40008010

Symbol: SSI0_CPSR_R
   Definitions
      At line 41 in file INIT.s
   Uses
      At line 269 in file INIT.s
Comment: SSI0_CPSR_R used once
SSI0_CR0_R 40008000

Symbol: SSI0_CR0_R
   Definitions
      At line 37 in file INIT.s
   Uses
      At line 281 in file INIT.s
Comment: SSI0_CR0_R used once
SSI0_CR1_R 40008004

Symbol: SSI0_CR1_R
   Definitions
      At line 38 in file INIT.s
   Uses
      At line 250 in file INIT.s
      At line 255 in file INIT.s
      At line 288 in file INIT.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 39 in file INIT.s
   Uses



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

      At line 340 in file INIT.s
      At line 354 in file INIT.s
      At line 367 in file INIT.s
      At line 381 in file INIT.s
      At line 395 in file INIT.s
      At line 408 in file INIT.s
      At line 423 in file INIT.s
      At line 436 in file INIT.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 40 in file INIT.s
   Uses
      At line 331 in file INIT.s
      At line 345 in file INIT.s
      At line 358 in file INIT.s
      At line 372 in file INIT.s
      At line 386 in file INIT.s
      At line 399 in file INIT.s
      At line 414 in file INIT.s
      At line 427 in file INIT.s

SSI_CC_CS_M 0000000F

Symbol: SSI_CC_CS_M
   Definitions
      At line 56 in file INIT.s
   Uses
      None
Comment: SSI_CC_CS_M unused
SSI_CC_CS_SYSPLL 00000000

Symbol: SSI_CC_CS_SYSPLL
   Definitions
      At line 57 in file INIT.s
   Uses
      None
Comment: SSI_CC_CS_SYSPLL unused
SSI_CPSR_CPSDVSR_M 000000FF

Symbol: SSI_CPSR_CPSDVSR_M
   Definitions
      At line 55 in file INIT.s
   Uses
      None
Comment: SSI_CPSR_CPSDVSR_M unused
SSI_CR0_DSS_8 00000007

Symbol: SSI_CR0_DSS_8
   Definitions
      At line 49 in file INIT.s
   Uses
      None
Comment: SSI_CR0_DSS_8 unused
SSI_CR0_DSS_M 0000000F

Symbol: SSI_CR0_DSS_M



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 48 in file INIT.s
   Uses
      None
Comment: SSI_CR0_DSS_M unused
SSI_CR0_FRF_M 00000030

Symbol: SSI_CR0_FRF_M
   Definitions
      At line 46 in file INIT.s
   Uses
      None
Comment: SSI_CR0_FRF_M unused
SSI_CR0_FRF_MOTO 00000000

Symbol: SSI_CR0_FRF_MOTO
   Definitions
      At line 47 in file INIT.s
   Uses
      None
Comment: SSI_CR0_FRF_MOTO unused
SSI_CR0_SCR_M 0000FF00

Symbol: SSI_CR0_SCR_M
   Definitions
      At line 43 in file INIT.s
   Uses
      None
Comment: SSI_CR0_SCR_M unused
SSI_CR0_SPH 00000080

Symbol: SSI_CR0_SPH
   Definitions
      At line 44 in file INIT.s
   Uses
      None
Comment: SSI_CR0_SPH unused
SSI_CR0_SPO 00000040

Symbol: SSI_CR0_SPO
   Definitions
      At line 45 in file INIT.s
   Uses
      None
Comment: SSI_CR0_SPO unused
SSI_CR1_MS 00000004

Symbol: SSI_CR1_MS
   Definitions
      At line 50 in file INIT.s
   Uses
      None
Comment: SSI_CR1_MS unused
SSI_CR1_SSE 00000002

Symbol: SSI_CR1_SSE
   Definitions
      At line 51 in file INIT.s
   Uses



ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

      None
Comment: SSI_CR1_SSE unused
SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 53 in file INIT.s
   Uses
      None
Comment: SSI_SR_BSY unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 54 in file INIT.s
   Uses
      None
Comment: SSI_SR_TNF unused
SYSCTL_RCGC1_R 400FE104

Symbol: SYSCTL_RCGC1_R
   Definitions
      At line 60 in file INIT.s
   Uses
      At line 116 in file INIT.s
Comment: SYSCTL_RCGC1_R used once
SYSCTL_RCGC1_SSI0 00000010

Symbol: SYSCTL_RCGC1_SSI0
   Definitions
      At line 62 in file INIT.s
   Uses
      None
Comment: SYSCTL_RCGC1_SSI0 unused
SYSCTL_RCGC2_GPIOA 00000001

Symbol: SYSCTL_RCGC2_GPIOA
   Definitions
      At line 63 in file INIT.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOA unused
SYSCTL_RCGC2_R 400FE108

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 61 in file INIT.s
   Uses
      At line 127 in file INIT.s
Comment: SYSCTL_RCGC2_R used once
84 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DELAY100 00000000

Symbol: DELAY100
   Definitions
      At line 107 in file INIT.s
   Uses
      At line 303 in file INIT.s
Comment: DELAY100 used once
1 symbol
431 symbols in table
