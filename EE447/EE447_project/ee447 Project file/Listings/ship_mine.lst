


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; cursor.s  
    3 00000000         ; This program gets (X,Y) coordinates from R7 and R8. 
    4 00000000         ; Displays the cursor on the screen according to (X,Y).
    5 00000000         ;*******************************************************
                       ******** 
    6 00000000         ;*******************************************************
                       ******** 
    7 00000000         ; EQU Directives
    8 00000000         ; These directives do not allocate memory
    9 00000000         ;*******************************************************
                       ********
   10 00000000         ;LABEL   DIRECTIVE VALUE  COMMENT
   11 00000000 40004100 
                       DC      EQU              0x40004100
   12 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   13 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   14 00000000 00000087 
                       X       EQU              0x87
   15 00000000 00000041 
                       Y       EQU              0x41
   16 00000000 20000504 
                       memory  EQU              0x20000504
   17 00000000 20000604 
                       offset_memory
                               EQU              0x20000604
   18 00000000         ;*******************************************************
                       ********
   19 00000000         ; Program section           
   20 00000000         ;*******************************************************
                       ********
   21 00000000         ;LABEL   DIRECTIVE VALUE     COMMENT
   22 00000000                 AREA             main, READONLY, CODE
   23 00000000                 THUMB
   24 00000000                 EXPORT           ship_mine   ; Make available
   25 00000000         
   26 00000000         ship_mine
   27 00000000 E92D 5FFF       PUSH             {R0-R12,LR}
   28 00000004         
   29 00000004 F240 5204 
              F2C2 0200        MOV32            R2, memory
   30 0000000C F240 6404 
              F2C2 0400        MOV32            R4, offset_memory
   31 00000014 F04F 0500       MOV              R5, #0      ; for loop = 64  
   32 00000018 F04F 0604       MOV              R6, #4      ; change Y
   33 0000001C         
   34 0000001C         from_memory                          ;CMP R2, R4   ; mem
                                                            ory check in order 
                                                            to be done
   35 0000001C         ;    BEQ finish
   36 0000001C F812 3B01       LDRB             R3, [R2], #1 ; R3 holds the mem
                                                            ory value
   37 00000020         ;    CMP R3, #0x0
   38 00000020         ;    BEQ from_memory



ARM Macro Assembler    Page 2 


   39 00000020         ;    MVN R3, R3
   40 00000020         
   41 00000020         
   42 00000020 F248 000C 
              F2C4 0000 
                       display MOV32            R0, SSI0_SR_R
   43 00000028 6801            LDR              R1, [R0]
   44 0000002A F011 0110       ANDS             R1, R1, #0x10
   45 0000002E D1F7            BNE              display
   46 00000030         ; sent
   47 00000030 F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
   48 00000038 F04F 0140       MOV              R1, #0x40   ; screen update
   49 0000003C 6001            STR              R1, [R0]
   50 0000003E F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
   51 00000046         ;MVN R3, R3
   52 00000046 6003            STR              R3, [R0]    ; R3 value => scree
                                                            n 
   53 00000048 F105 0501       ADD              R5, #1      ; memory++
   54 0000004C 2D40            CMP              R5, #64     ; memory 64 check
   55 0000004E D1E5            BNE              from_memory
   56 00000050 F04F 0500       MOV              R5, #0
   57 00000054         
   58 00000054 42A2            CMP              R2, R4      ; memory check in o
                                                            rder to be done
   59 00000056 D053            BEQ              finish
   60 00000058 F1A6 0601       SUB              R6, #1
   61 0000005C 2E02            CMP              R6, #2
   62 0000005E D801            BHI              Y2
   63 00000060 D01A            BEQ              Y3
   64 00000062 D333            BLO              Y4
   65 00000064         
   66 00000064 F248 000C 
              F2C4 0000 
                       Y2      MOV32            R0, SSI0_SR_R
   67 0000006C 6801            LDR              R1, [R0]
   68 0000006E F011 0110       ANDS             R1, R1, #0x10
   69 00000072 D1F7            BNE              Y2
   70 00000074 F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
   71 0000007C F04F 0100       MOV              R1, #0
   72 00000080 6001            STR              R1, [R0]
   73 00000082         ; sent
   74 00000082 F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
   75 0000008A F04F 0186       MOV              R1, #0x86   ; CURSOR RESET X=6
   76 0000008E 6001            STR              R1, [R0]
   77 00000090 F04F 0142       MOV              R1, #0x42   ;  CURSOR RESET Y=2
                                                            
   78 00000094 6001            STR              R1, [R0]
   79 00000096 E7C1            B                from_memory
   80 00000098         
   81 00000098 F248 000C 
              F2C4 0000 
                       Y3      MOV32            R0, SSI0_SR_R
   82 000000A0 6801            LDR              R1, [R0]
   83 000000A2 F011 0110       ANDS             R1, R1, #0x10
   84 000000A6 D1F7            BNE              Y3



ARM Macro Assembler    Page 3 


   85 000000A8 F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
   86 000000B0 F04F 0100       MOV              R1, #0
   87 000000B4 6001            STR              R1, [R0]
   88 000000B6         ; sent
   89 000000B6 F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
   90 000000BE F04F 0186       MOV              R1, #0x86   ; CURSOR RESET X=6
   91 000000C2 6001            STR              R1, [R0]
   92 000000C4 F04F 0143       MOV              R1, #0x43   ;  CURSOR RESET Y=3
                                                            
   93 000000C8 6001            STR              R1, [R0]
   94 000000CA E7A7            B                from_memory
   95 000000CC         
   96 000000CC F248 000C 
              F2C4 0000 
                       Y4      MOV32            R0, SSI0_SR_R
   97 000000D4 6801            LDR              R1, [R0]
   98 000000D6 F011 0110       ANDS             R1, R1, #0x10
   99 000000DA D1F7            BNE              Y4
  100 000000DC F244 1000 
              F2C4 0000        MOV32            R0, DC      ;dc_command  
  101 000000E4 F04F 0100       MOV              R1, #0
  102 000000E8 6001            STR              R1, [R0]
  103 000000EA         ; sent
  104 000000EA F248 0008 
              F2C4 0000        MOV32            R0, SSI0_DR_R
  105 000000F2 F04F 0186       MOV              R1, #0x86   ; CURSOR RESET X=6
  106 000000F6 6001            STR              R1, [R0]
  107 000000F8 F04F 0144       MOV              R1, #0x44   ;  CURSOR RESET Y=4
                                                            
  108 000000FC 6001            STR              R1, [R0]
  109 000000FE E78D            B                from_memory
  110 00000100         
  111 00000100 E8BD 5FFF 
                       finish  POP              {R0-R12,LR}
  112 00000104 4770            BX               LR
  113 00000106 00 00           ALIGN
  114 00000108                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\ship_mine.d -o.\objects\ship_mine.o -I.\RTE\_Target_1
 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\
ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SE
TA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\ship_mine.lst ship_
mine.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Y2 00000064

Symbol: Y2
   Definitions
      At line 66 in file ship_mine.s
   Uses
      At line 62 in file ship_mine.s
      At line 69 in file ship_mine.s

Y3 00000098

Symbol: Y3
   Definitions
      At line 81 in file ship_mine.s
   Uses
      At line 63 in file ship_mine.s
      At line 84 in file ship_mine.s

Y4 000000CC

Symbol: Y4
   Definitions
      At line 96 in file ship_mine.s
   Uses
      At line 64 in file ship_mine.s
      At line 99 in file ship_mine.s

display 00000020

Symbol: display
   Definitions
      At line 42 in file ship_mine.s
   Uses
      At line 45 in file ship_mine.s
Comment: display used once
finish 00000100

Symbol: finish
   Definitions
      At line 111 in file ship_mine.s
   Uses
      At line 59 in file ship_mine.s
Comment: finish used once
from_memory 0000001C

Symbol: from_memory
   Definitions
      At line 34 in file ship_mine.s
   Uses
      At line 55 in file ship_mine.s
      At line 79 in file ship_mine.s
      At line 94 in file ship_mine.s
      At line 109 in file ship_mine.s

main 00000000

Symbol: main
   Definitions
      At line 22 in file ship_mine.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      None
Comment: main unused
ship_mine 00000000

Symbol: ship_mine
   Definitions
      At line 26 in file ship_mine.s
   Uses
      At line 24 in file ship_mine.s
Comment: ship_mine used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 11 in file ship_mine.s
   Uses
      At line 47 in file ship_mine.s
      At line 70 in file ship_mine.s
      At line 85 in file ship_mine.s
      At line 100 in file ship_mine.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 13 in file ship_mine.s
   Uses
      At line 50 in file ship_mine.s
      At line 74 in file ship_mine.s
      At line 89 in file ship_mine.s
      At line 104 in file ship_mine.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 12 in file ship_mine.s
   Uses
      At line 42 in file ship_mine.s
      At line 66 in file ship_mine.s
      At line 81 in file ship_mine.s
      At line 96 in file ship_mine.s

X 00000087

Symbol: X
   Definitions
      At line 14 in file ship_mine.s
   Uses
      None
Comment: X unused
Y 00000041

Symbol: Y
   Definitions
      At line 15 in file ship_mine.s
   Uses
      None
Comment: Y unused
memory 20000504

Symbol: memory
   Definitions
      At line 16 in file ship_mine.s
   Uses
      At line 29 in file ship_mine.s
Comment: memory used once
offset_memory 20000604




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: offset_memory
   Definitions
      At line 17 in file ship_mine.s
   Uses
      At line 30 in file ship_mine.s
Comment: offset_memory used once
7 symbols
349 symbols in table
